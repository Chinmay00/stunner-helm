apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: gatewayconfigs.stunner.l7mp.io
spec:
  group: stunner.l7mp.io
  names:
    categories:
    - stunner
    kind: GatewayConfig
    listKind: GatewayConfigList
    plural: gatewayconfigs
    shortNames:
    - gtwconf
    singular: gatewayconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.realm
      name: Realm
      type: string
    - jsonPath: .spec.authType
      name: Auth
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GatewayConfig is the Schema for the gatewayconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GatewayConfigSpec defines the desired state of GatewayConfig
            properties:
              authLifetime:
                description: AuthLifetime defines the lifetime of "longterm" authentication
                  credentials in seconds.
                format: int32
                type: integer
              authRef:
                description: 'Note that externally set credentials override any inline
                  auth credentials (AuthType, AuthUsername, etc.): if AuthRef is nonempty
                  then it is expected that the referenced Secret exists and *all*
                  authentication credentials are correctly set in the referenced Secret
                  (username/password or shared secret). Mixing of credential sources
                  (inline/external) is not supported.'
                properties:
                  group:
                    default: ""
                    description: Group is the group of the referent. For example,
                      "gateway.networking.k8s.io". When unspecified or empty string,
                      core API group is inferred.
                    maxLength: 253
                    pattern: "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    type: string
                  kind:
                    default: Secret
                    description: Kind is kind of the referent. For example "HTTPRoute"
                      or "Service".
                    maxLength: 63
                    minLength: 1
                    pattern: "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                    type: string
                  name:
                    description: Name is the name of the referent.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: "Namespace is the namespace of the backend. When
                      unspecified, the local namespace is inferred. \n Note that when
                      a namespace is specified, a ReferenceGrant object is required
                      in the referent namespace to allow that namespace's owner to
                      accept the reference. See the ReferenceGrant documentation for
                      details. \n Support: Core"
                    maxLength: 63
                    minLength: 1
                    pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    type: string
                required:
                - name
                type: object
              authType:
                default: plaintext
                description: AuthType is the type of the STUN/TURN authentication
                  mechanism.
                pattern: "^plaintext|static|longterm|ephemeral|timewindowed$"
                type: string
              healthCheckEndpoint:
                description: HealthCheckEndpoint is the URI of the form `http://address:port`
                  exposed for external HTTP health-checking. A liveness probe responder
                  will be exposed on path `/live` and readiness probe on path `/ready`.
                  The scheme (`http://`) is mandatory, default is to enable health-checking
                  at "http://0.0.0.0:8086".
                type: string
              loadBalancerServiceAnnotations:
                additionalProperties:
                  type: string
                description: "LoadBalancerServiceAnnotations is a list of annotations
                  that will go into the LoadBalancer services created automatically
                  by the operator to wrap Gateways. \n NOTE: removing annotations
                  from a GatewayConfig will not result in the removal of the corresponding
                  annotations from the LoadBalancer service, in order to prevent the
                  accidental removal of an annotation installed there by Kubernetes
                  or the cloud provider. If you really want to remove an annotation,
                  do this manually or simply remove all Gateways (which will remove
                  the corresponding LoadBalancer services), update the GatewayConfig
                  and then recreate the Gateways, so that the newly created LoadBalancer
                  services will contain the required annotations."
                type: object
              logLevel:
                description: LogLevel specifies the default loglevel for the STUNner
                  daemon.
                type: string
              maxPort:
                description: MaxRelayPort is the smallest relay port assigned for
                  STUNner relay connections.
                format: int32
                type: integer
              metricsEndpoint:
                description: MetricsEndpoint is the URI in the form `http://address:port/path`
                  exposed for metric scraping (Prometheus). The scheme (`http://`)
                  is mandatory. Default is to expose no metric endpoint.
                type: string
              minPort:
                description: MinRelayPort is the smallest relay port assigned for
                  STUNner relay connections.
                format: int32
                type: integer
              password:
                description: Password defines the `password` credential for "plaintext"
                  authentication.
                pattern: "^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$"
                type: string
              realm:
                default: stunner.l7mp.io
                description: "Realm defines the STUN/TURN authentication realm to
                  be used for clients toauthenticate with STUNner. \n The realm must
                  consist of lower case alphanumeric characters or '-', and must start
                  and end with an alphanumeric character. No other punctuation is
                  allowed."
                pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                type: string
              sharedSecret:
                description: SharedSecret defines the shared secret to be used for
                  "longterm" authentication.
                type: string
              stunnerConfig:
                default: stunnerd-config
                description: StunnerConfig specifies the name of the ConfigMap into
                  which the operator renders the stunnerd configfile.
                maxLength: 64
                pattern: "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                type: string
              userName:
                description: Username defines the `username` credential for "plaintext"
                  authentication.
                pattern: "^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$"
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: staticservices.stunner.l7mp.io
spec:
  group: stunner.l7mp.io
  names:
    categories:
    - stunner
    kind: StaticService
    listKind: StaticServiceList
    plural: staticservices
    shortNames:
    - ssvc
    singular: staticservice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StaticService is a set of static IP address prefixes STUNner
          allows access to via a Route. The purpose is to allow a Service-like CRD
          containing a set of static IP address prefixes to be set as the backend
          of a UDPRoute (or TCPRoute).
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the behavior of a service.
            properties:
              ports:
                description: The list of ports reachable via this service (currently
                  omitted).
                items:
                  description: ServicePort contains information on service's port.
                  properties:
                    appProtocol:
                      description: The application protocol for this port. This field
                        follows standard Kubernetes label syntax. Un-prefixed names
                        are reserved for IANA standard service names (as per RFC-6335
                        and https://www.iana.org/assignments/service-names). Non-standard
                        protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                      type: string
                    name:
                      description: The name of this port within the service. This
                        must be a DNS_LABEL. All ports within a ServiceSpec must have
                        unique names. When considering the endpoints for a Service,
                        this must match the 'name' field in the EndpointPort. Optional
                        if only one ServicePort is defined on this service.
                      type: string
                    nodePort:
                      description: 'The port on each node on which this service is
                        exposed when type is NodePort or LoadBalancer.  Usually assigned
                        by the system. If a value is specified, in-range, and not
                        in use it will be used, otherwise the operation will fail.  If
                        not specified, a port will be allocated if this Service requires
                        one.  If this field is specified when creating a Service which
                        does not need it, creation will fail. This field will be wiped
                        when updating a Service to no longer need it (e.g. changing
                        type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                      format: int32
                      type: integer
                    port:
                      description: The port that will be exposed by this service.
                      format: int32
                      type: integer
                    protocol:
                      default: TCP
                      description: The IP protocol for this port. Supports "TCP",
                        "UDP", and "SCTP". Default is TCP.
                      type: string
                    targetPort:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'Number or name of the port to access on the pods
                        targeted by the service. Number must be in the range 1 to
                        65535. Name must be an IANA_SVC_NAME. If this is a string,
                        it will be looked up as a named port in the target Pod''s
                        container ports. If this is not specified, the value of the
                        ''port'' field is used (an identity map). This field is ignored
                        for services with clusterIP=None, and should be omitted or
                        set equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                      x-kubernetes-int-or-string: true
                  required:
                  - port
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - port
                - protocol
                x-kubernetes-list-type: map
              prefixes:
                description: Prefixes is a list of IP address prefixes reachable via
                  this route.
                items:
                  type: string
                type: array
            required:
            - prefixes
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

# Default values for stunner-gateway-operator.

# To set the namespace for the deployment use the --namespace=<your-namespace> --create-namespace
# additional commands when installing your release
# It will create the desired namespace if not present

stunnerGatewayOperator:
  enabled: true
  deployment:
    name: stunner-gateway-operator
    tolerations: []
    nodeSelector:
      kubernetes.io/os: linux
    container:
      manager:
        image:
          repository: ""
          name: l7mp/stunner-gateway-operator
          pullPolicy: IfNotPresent
          tag: 0.15.0
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 128Mi
        args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
          - --zap-log-level=info
      kubeRbacProxy:
        image:
          name: gcr.io/kubebuilder/kube-rbac-proxy:v0.11.0
  dataplane:
    # Can be 'legacy' or 'managed'
    # for now default is legacy
    # but will be changed in the future
    mode: legacy
    spec:
      # The `default` template spawns a single stunnerd container with the
      # running config mapped into the pod from the ConfigMap. The `config-watcher` template
      # uses a separate sidecar container to watch the ConfigMap, which can be faster than the
      # default but requires additional RBAC permissions.
      template: default
      replicas: 1
      # latest equals the last stable release
      # for dev version set it to l7mp/stunnerd:dev
      image: l7mp/stunnerd:latest
      imagePullPolicy: Always
      command:
        - stunnerd
      env: []
      args:
        - -w
        - -c
        - /etc/stunnerd/stunnerd.conf
        - --udp-thread-num=16
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 128Mi
      terminationGracePeriodSeconds: 3600
      hostNetwork: false
      affinity: {}
      securityContext: {}
      tolerations: []

stunnerAuthService:
  enabled: true
  deployment:
    tolerations: []
    nodeSelector:
      kubernetes.io/os: linux
